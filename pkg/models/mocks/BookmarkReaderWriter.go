// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package mocks

import (
	context "context"

	models "github.com/stashapp/stash/pkg/models"
	mock "github.com/stretchr/testify/mock"
)

// BookmarkReaderWriter is an autogenerated mock type for the BookmarkReaderWriter type
type BookmarkReaderWriter struct {
	mock.Mock
}

// All provides a mock function with given fields:
func (_m *BookmarkReaderWriter) All(ctx context.Context) ([]*models.Bookmark, error) {
	ret := _m.Called()

	var r0 []*models.Bookmark
	if rf, ok := ret.Get(0).(func() []*models.Bookmark); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]*models.Bookmark)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Create provides a mock function with given fields: newBookmark
func (_m *BookmarkReaderWriter) Create(ctx context.Context, newBookmark models.Bookmark) (*models.Bookmark, error) {
	ret := _m.Called(newBookmark)

	var r0 *models.Bookmark
	if rf, ok := ret.Get(0).(func(models.Bookmark) *models.Bookmark); ok {
		r0 = rf(newBookmark)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.Bookmark)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(models.Bookmark) error); ok {
		r1 = rf(newBookmark)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Destroy provides a mock function with given fields: id
func (_m *BookmarkReaderWriter) Destroy(ctx context.Context, id int) error {
	ret := _m.Called(id)

	var r0 error
	if rf, ok := ret.Get(0).(func(int) error); ok {
		r0 = rf(id)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Find provides a mock function with given fields: id
func (_m *BookmarkReaderWriter) Find(ctx context.Context, id int) (*models.Bookmark, error) {
	ret := _m.Called(id)

	var r0 *models.Bookmark
	if rf, ok := ret.Get(0).(func(int) *models.Bookmark); ok {
		r0 = rf(id)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.Bookmark)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(int) error); ok {
		r1 = rf(id)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetMaxPosition provides a mock function with given fields:
func (_m *BookmarkReaderWriter) GetMaxPosition(ctx context.Context) (int, error) {
	ret := _m.Called()

	var r0 int
	if rf, ok := ret.Get(0).(func() int); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(int)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// UpdateFull provides a mock function with given fields: updateBookmark
func (_m *BookmarkReaderWriter) UpdateFull(ctx context.Context, updateBookmark models.Bookmark) (*models.Bookmark, error) {
	ret := _m.Called(updateBookmark)

	var r0 *models.Bookmark
	if rf, ok := ret.Get(0).(func(models.Bookmark) *models.Bookmark); ok {
		r0 = rf(updateBookmark)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.Bookmark)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(models.Bookmark) error); ok {
		r1 = rf(updateBookmark)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
